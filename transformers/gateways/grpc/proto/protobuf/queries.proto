syntax = "proto3";

package gork_gateways_grpc;
import "common.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;

// Queues service is responsible for management of the queues.
service Queues {
    rpc List (QueuesCmds.List.Request) returns (QueuesCmds.List.Response);
    rpc Create (QueuesCmds.Create.Request) returns (QueuesCmds.Create.Response);
    rpc Read (QueuesCmds.Read.Request) returns (QueuesCmds.Read.Response);
    rpc Delete (QueuesCmds.Delete.Request) returns (QueuesCmds.Delete.Response);
}

// Queue represents a single queue.
message Queue {

    string id = 1; // unique ID
    string name = 2; // unique name
    repeated Setting settings = 3; // settings
    string created_at = 4; // creation time

    message Setting {
        string key = 1;
        string value = 2;
    }
}

// QueuesCmds is a container that wraps request/response messages of all queue-related RPC commands.
message QueuesCmds {

    message List {
        message Request {
            Collection.Params params = 1;
        }
        message Response {
            Collection.Info info = 1;
            repeated Queue records = 2; // found records
        }
    }

    message Create {
        message Request {
            string name = 1; // name of the queue
            repeated Queue.Setting settings = 2; // queue settings
        }
        message Response {
            Queue record = 1; // created queue
        }
    }

    message Read {
        message Request {
            string id = 1; // query id
        }
        message Response {
            Queue record = 1; // queue instance
        }
    }

    message Delete {
        message Request {
            string id = 1; // query ID
        }
        message Response {
            bool result = 1; // operation result
        }
    }
}