// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queries.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Queue represents a single queue.
type Queue struct {
	Id        string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name      string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Settings  *Queue_Settings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
	CreatedAt string          `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Queue) Reset()                    { *m = Queue{} }
func (m *Queue) String() string            { return proto1.CompactTextString(m) }
func (*Queue) ProtoMessage()               {}
func (*Queue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Queue) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Queue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Queue) GetSettings() *Queue_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *Queue) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type Queue_Settings struct {
	RateLimit *Queue_Settings_RateLimit `protobuf:"bytes,1,opt,name=rate_limit,json=rateLimit" json:"rate_limit,omitempty"`
}

func (m *Queue_Settings) Reset()                    { *m = Queue_Settings{} }
func (m *Queue_Settings) String() string            { return proto1.CompactTextString(m) }
func (*Queue_Settings) ProtoMessage()               {}
func (*Queue_Settings) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *Queue_Settings) GetRateLimit() *Queue_Settings_RateLimit {
	if m != nil {
		return m.RateLimit
	}
	return nil
}

type Queue_Settings_RateLimit struct {
	Tokens   uint64 `protobuf:"varint,1,opt,name=tokens" json:"tokens,omitempty"`
	Duration uint32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
}

func (m *Queue_Settings_RateLimit) Reset()                    { *m = Queue_Settings_RateLimit{} }
func (m *Queue_Settings_RateLimit) String() string            { return proto1.CompactTextString(m) }
func (*Queue_Settings_RateLimit) ProtoMessage()               {}
func (*Queue_Settings_RateLimit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0, 0} }

func (m *Queue_Settings_RateLimit) GetTokens() uint64 {
	if m != nil {
		return m.Tokens
	}
	return 0
}

func (m *Queue_Settings_RateLimit) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// QueuesCmds is a container that wraps request/response messages of all queue-related RPC commands.
type QueuesCmds struct {
}

func (m *QueuesCmds) Reset()                    { *m = QueuesCmds{} }
func (m *QueuesCmds) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds) ProtoMessage()               {}
func (*QueuesCmds) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type QueuesCmds_List struct {
}

func (m *QueuesCmds_List) Reset()                    { *m = QueuesCmds_List{} }
func (m *QueuesCmds_List) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_List) ProtoMessage()               {}
func (*QueuesCmds_List) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

type QueuesCmds_List_Request struct {
	Params *Collection_Params `protobuf:"bytes,1,opt,name=params" json:"params,omitempty"`
}

func (m *QueuesCmds_List_Request) Reset()                    { *m = QueuesCmds_List_Request{} }
func (m *QueuesCmds_List_Request) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_List_Request) ProtoMessage()               {}
func (*QueuesCmds_List_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0, 0} }

func (m *QueuesCmds_List_Request) GetParams() *Collection_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

type QueuesCmds_List_Response struct {
	Info    *Collection_Info `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Records []*Queue         `protobuf:"bytes,2,rep,name=records" json:"records,omitempty"`
}

func (m *QueuesCmds_List_Response) Reset()                    { *m = QueuesCmds_List_Response{} }
func (m *QueuesCmds_List_Response) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_List_Response) ProtoMessage()               {}
func (*QueuesCmds_List_Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0, 1} }

func (m *QueuesCmds_List_Response) GetInfo() *Collection_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *QueuesCmds_List_Response) GetRecords() []*Queue {
	if m != nil {
		return m.Records
	}
	return nil
}

type QueuesCmds_Create struct {
}

func (m *QueuesCmds_Create) Reset()                    { *m = QueuesCmds_Create{} }
func (m *QueuesCmds_Create) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Create) ProtoMessage()               {}
func (*QueuesCmds_Create) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1} }

type QueuesCmds_Create_Request struct {
	Name     string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Settings *Queue_Settings `protobuf:"bytes,2,opt,name=settings" json:"settings,omitempty"`
}

func (m *QueuesCmds_Create_Request) Reset()                    { *m = QueuesCmds_Create_Request{} }
func (m *QueuesCmds_Create_Request) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Create_Request) ProtoMessage()               {}
func (*QueuesCmds_Create_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1, 0} }

func (m *QueuesCmds_Create_Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueuesCmds_Create_Request) GetSettings() *Queue_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type QueuesCmds_Create_Response struct {
	Record *Queue `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *QueuesCmds_Create_Response) Reset()         { *m = QueuesCmds_Create_Response{} }
func (m *QueuesCmds_Create_Response) String() string { return proto1.CompactTextString(m) }
func (*QueuesCmds_Create_Response) ProtoMessage()    {}
func (*QueuesCmds_Create_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 1, 1}
}

func (m *QueuesCmds_Create_Response) GetRecord() *Queue {
	if m != nil {
		return m.Record
	}
	return nil
}

type QueuesCmds_Read struct {
}

func (m *QueuesCmds_Read) Reset()                    { *m = QueuesCmds_Read{} }
func (m *QueuesCmds_Read) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Read) ProtoMessage()               {}
func (*QueuesCmds_Read) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 2} }

type QueuesCmds_Read_Request struct {
	// Types that are valid to be assigned to Identifier:
	//	*QueuesCmds_Read_Request_Id
	//	*QueuesCmds_Read_Request_Name
	Identifier isQueuesCmds_Read_Request_Identifier `protobuf_oneof:"identifier"`
}

func (m *QueuesCmds_Read_Request) Reset()                    { *m = QueuesCmds_Read_Request{} }
func (m *QueuesCmds_Read_Request) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Read_Request) ProtoMessage()               {}
func (*QueuesCmds_Read_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 2, 0} }

type isQueuesCmds_Read_Request_Identifier interface {
	isQueuesCmds_Read_Request_Identifier()
}

type QueuesCmds_Read_Request_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type QueuesCmds_Read_Request_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}

func (*QueuesCmds_Read_Request_Id) isQueuesCmds_Read_Request_Identifier()   {}
func (*QueuesCmds_Read_Request_Name) isQueuesCmds_Read_Request_Identifier() {}

func (m *QueuesCmds_Read_Request) GetIdentifier() isQueuesCmds_Read_Request_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *QueuesCmds_Read_Request) GetId() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Read_Request_Id); ok {
		return x.Id
	}
	return ""
}

func (m *QueuesCmds_Read_Request) GetName() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Read_Request_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QueuesCmds_Read_Request) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _QueuesCmds_Read_Request_OneofMarshaler, _QueuesCmds_Read_Request_OneofUnmarshaler, _QueuesCmds_Read_Request_OneofSizer, []interface{}{
		(*QueuesCmds_Read_Request_Id)(nil),
		(*QueuesCmds_Read_Request_Name)(nil),
	}
}

func _QueuesCmds_Read_Request_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*QueuesCmds_Read_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Read_Request_Id:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *QueuesCmds_Read_Request_Name:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("QueuesCmds_Read_Request.Identifier has unexpected type %T", x)
	}
	return nil
}

func _QueuesCmds_Read_Request_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*QueuesCmds_Read_Request)
	switch tag {
	case 1: // identifier.id
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Read_Request_Id{x}
		return true, err
	case 2: // identifier.name
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Read_Request_Name{x}
		return true, err
	default:
		return false, nil
	}
}

func _QueuesCmds_Read_Request_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*QueuesCmds_Read_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Read_Request_Id:
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *QueuesCmds_Read_Request_Name:
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QueuesCmds_Read_Response struct {
	Record *Queue `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *QueuesCmds_Read_Response) Reset()                    { *m = QueuesCmds_Read_Response{} }
func (m *QueuesCmds_Read_Response) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Read_Response) ProtoMessage()               {}
func (*QueuesCmds_Read_Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 2, 1} }

func (m *QueuesCmds_Read_Response) GetRecord() *Queue {
	if m != nil {
		return m.Record
	}
	return nil
}

type QueuesCmds_Update struct {
}

func (m *QueuesCmds_Update) Reset()                    { *m = QueuesCmds_Update{} }
func (m *QueuesCmds_Update) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Update) ProtoMessage()               {}
func (*QueuesCmds_Update) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 3} }

type QueuesCmds_Update_Request struct {
	// Types that are valid to be assigned to Identifier:
	//	*QueuesCmds_Update_Request_Id
	//	*QueuesCmds_Update_Request_Name
	Identifier isQueuesCmds_Update_Request_Identifier `protobuf_oneof:"identifier"`
	Data       *QueuesCmds_Update_Request_Data        `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *QueuesCmds_Update_Request) Reset()                    { *m = QueuesCmds_Update_Request{} }
func (m *QueuesCmds_Update_Request) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Update_Request) ProtoMessage()               {}
func (*QueuesCmds_Update_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 3, 0} }

type isQueuesCmds_Update_Request_Identifier interface {
	isQueuesCmds_Update_Request_Identifier()
}

type QueuesCmds_Update_Request_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type QueuesCmds_Update_Request_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}

func (*QueuesCmds_Update_Request_Id) isQueuesCmds_Update_Request_Identifier()   {}
func (*QueuesCmds_Update_Request_Name) isQueuesCmds_Update_Request_Identifier() {}

func (m *QueuesCmds_Update_Request) GetIdentifier() isQueuesCmds_Update_Request_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *QueuesCmds_Update_Request) GetId() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Update_Request_Id); ok {
		return x.Id
	}
	return ""
}

func (m *QueuesCmds_Update_Request) GetName() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Update_Request_Name); ok {
		return x.Name
	}
	return ""
}

func (m *QueuesCmds_Update_Request) GetData() *QueuesCmds_Update_Request_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QueuesCmds_Update_Request) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _QueuesCmds_Update_Request_OneofMarshaler, _QueuesCmds_Update_Request_OneofUnmarshaler, _QueuesCmds_Update_Request_OneofSizer, []interface{}{
		(*QueuesCmds_Update_Request_Id)(nil),
		(*QueuesCmds_Update_Request_Name)(nil),
	}
}

func _QueuesCmds_Update_Request_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*QueuesCmds_Update_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Update_Request_Id:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *QueuesCmds_Update_Request_Name:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("QueuesCmds_Update_Request.Identifier has unexpected type %T", x)
	}
	return nil
}

func _QueuesCmds_Update_Request_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*QueuesCmds_Update_Request)
	switch tag {
	case 1: // identifier.id
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Update_Request_Id{x}
		return true, err
	case 2: // identifier.name
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Update_Request_Name{x}
		return true, err
	default:
		return false, nil
	}
}

func _QueuesCmds_Update_Request_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*QueuesCmds_Update_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Update_Request_Id:
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *QueuesCmds_Update_Request_Name:
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QueuesCmds_Update_Request_Data struct {
	Name     string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Settings *Queue_Settings `protobuf:"bytes,2,opt,name=settings" json:"settings,omitempty"`
}

func (m *QueuesCmds_Update_Request_Data) Reset()         { *m = QueuesCmds_Update_Request_Data{} }
func (m *QueuesCmds_Update_Request_Data) String() string { return proto1.CompactTextString(m) }
func (*QueuesCmds_Update_Request_Data) ProtoMessage()    {}
func (*QueuesCmds_Update_Request_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 3, 0, 0}
}

func (m *QueuesCmds_Update_Request_Data) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueuesCmds_Update_Request_Data) GetSettings() *Queue_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type QueuesCmds_Update_Response struct {
	Record *Queue `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *QueuesCmds_Update_Response) Reset()         { *m = QueuesCmds_Update_Response{} }
func (m *QueuesCmds_Update_Response) String() string { return proto1.CompactTextString(m) }
func (*QueuesCmds_Update_Response) ProtoMessage()    {}
func (*QueuesCmds_Update_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 3, 1}
}

func (m *QueuesCmds_Update_Response) GetRecord() *Queue {
	if m != nil {
		return m.Record
	}
	return nil
}

type QueuesCmds_Delete struct {
}

func (m *QueuesCmds_Delete) Reset()                    { *m = QueuesCmds_Delete{} }
func (m *QueuesCmds_Delete) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Delete) ProtoMessage()               {}
func (*QueuesCmds_Delete) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 4} }

type QueuesCmds_Delete_Request struct {
	// Types that are valid to be assigned to Identifier:
	//	*QueuesCmds_Delete_Request_Id
	//	*QueuesCmds_Delete_Request_Name
	Identifier isQueuesCmds_Delete_Request_Identifier `protobuf_oneof:"identifier"`
}

func (m *QueuesCmds_Delete_Request) Reset()                    { *m = QueuesCmds_Delete_Request{} }
func (m *QueuesCmds_Delete_Request) String() string            { return proto1.CompactTextString(m) }
func (*QueuesCmds_Delete_Request) ProtoMessage()               {}
func (*QueuesCmds_Delete_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 4, 0} }

type isQueuesCmds_Delete_Request_Identifier interface {
	isQueuesCmds_Delete_Request_Identifier()
}

type QueuesCmds_Delete_Request_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type QueuesCmds_Delete_Request_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}

func (*QueuesCmds_Delete_Request_Id) isQueuesCmds_Delete_Request_Identifier()   {}
func (*QueuesCmds_Delete_Request_Name) isQueuesCmds_Delete_Request_Identifier() {}

func (m *QueuesCmds_Delete_Request) GetIdentifier() isQueuesCmds_Delete_Request_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *QueuesCmds_Delete_Request) GetId() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Delete_Request_Id); ok {
		return x.Id
	}
	return ""
}

func (m *QueuesCmds_Delete_Request) GetName() string {
	if x, ok := m.GetIdentifier().(*QueuesCmds_Delete_Request_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QueuesCmds_Delete_Request) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _QueuesCmds_Delete_Request_OneofMarshaler, _QueuesCmds_Delete_Request_OneofUnmarshaler, _QueuesCmds_Delete_Request_OneofSizer, []interface{}{
		(*QueuesCmds_Delete_Request_Id)(nil),
		(*QueuesCmds_Delete_Request_Name)(nil),
	}
}

func _QueuesCmds_Delete_Request_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*QueuesCmds_Delete_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Delete_Request_Id:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *QueuesCmds_Delete_Request_Name:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("QueuesCmds_Delete_Request.Identifier has unexpected type %T", x)
	}
	return nil
}

func _QueuesCmds_Delete_Request_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*QueuesCmds_Delete_Request)
	switch tag {
	case 1: // identifier.id
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Delete_Request_Id{x}
		return true, err
	case 2: // identifier.name
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Identifier = &QueuesCmds_Delete_Request_Name{x}
		return true, err
	default:
		return false, nil
	}
}

func _QueuesCmds_Delete_Request_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*QueuesCmds_Delete_Request)
	// identifier
	switch x := m.Identifier.(type) {
	case *QueuesCmds_Delete_Request_Id:
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *QueuesCmds_Delete_Request_Name:
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QueuesCmds_Delete_Response struct {
	Result bool `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *QueuesCmds_Delete_Response) Reset()         { *m = QueuesCmds_Delete_Response{} }
func (m *QueuesCmds_Delete_Response) String() string { return proto1.CompactTextString(m) }
func (*QueuesCmds_Delete_Response) ProtoMessage()    {}
func (*QueuesCmds_Delete_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 4, 1}
}

func (m *QueuesCmds_Delete_Response) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto1.RegisterType((*Queue)(nil), "gork_gateways_grpc.Queue")
	proto1.RegisterType((*Queue_Settings)(nil), "gork_gateways_grpc.Queue.Settings")
	proto1.RegisterType((*Queue_Settings_RateLimit)(nil), "gork_gateways_grpc.Queue.Settings.RateLimit")
	proto1.RegisterType((*QueuesCmds)(nil), "gork_gateways_grpc.QueuesCmds")
	proto1.RegisterType((*QueuesCmds_List)(nil), "gork_gateways_grpc.QueuesCmds.List")
	proto1.RegisterType((*QueuesCmds_List_Request)(nil), "gork_gateways_grpc.QueuesCmds.List.Request")
	proto1.RegisterType((*QueuesCmds_List_Response)(nil), "gork_gateways_grpc.QueuesCmds.List.Response")
	proto1.RegisterType((*QueuesCmds_Create)(nil), "gork_gateways_grpc.QueuesCmds.Create")
	proto1.RegisterType((*QueuesCmds_Create_Request)(nil), "gork_gateways_grpc.QueuesCmds.Create.Request")
	proto1.RegisterType((*QueuesCmds_Create_Response)(nil), "gork_gateways_grpc.QueuesCmds.Create.Response")
	proto1.RegisterType((*QueuesCmds_Read)(nil), "gork_gateways_grpc.QueuesCmds.Read")
	proto1.RegisterType((*QueuesCmds_Read_Request)(nil), "gork_gateways_grpc.QueuesCmds.Read.Request")
	proto1.RegisterType((*QueuesCmds_Read_Response)(nil), "gork_gateways_grpc.QueuesCmds.Read.Response")
	proto1.RegisterType((*QueuesCmds_Update)(nil), "gork_gateways_grpc.QueuesCmds.Update")
	proto1.RegisterType((*QueuesCmds_Update_Request)(nil), "gork_gateways_grpc.QueuesCmds.Update.Request")
	proto1.RegisterType((*QueuesCmds_Update_Request_Data)(nil), "gork_gateways_grpc.QueuesCmds.Update.Request.Data")
	proto1.RegisterType((*QueuesCmds_Update_Response)(nil), "gork_gateways_grpc.QueuesCmds.Update.Response")
	proto1.RegisterType((*QueuesCmds_Delete)(nil), "gork_gateways_grpc.QueuesCmds.Delete")
	proto1.RegisterType((*QueuesCmds_Delete_Request)(nil), "gork_gateways_grpc.QueuesCmds.Delete.Request")
	proto1.RegisterType((*QueuesCmds_Delete_Response)(nil), "gork_gateways_grpc.QueuesCmds.Delete.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Queues service

type QueuesClient interface {
	List(ctx context.Context, in *QueuesCmds_List_Request, opts ...grpc.CallOption) (*QueuesCmds_List_Response, error)
	Create(ctx context.Context, in *QueuesCmds_Create_Request, opts ...grpc.CallOption) (*QueuesCmds_Create_Response, error)
	Read(ctx context.Context, in *QueuesCmds_Read_Request, opts ...grpc.CallOption) (*QueuesCmds_Read_Response, error)
	Update(ctx context.Context, in *QueuesCmds_Update_Request, opts ...grpc.CallOption) (*QueuesCmds_Update_Response, error)
	Delete(ctx context.Context, in *QueuesCmds_Delete_Request, opts ...grpc.CallOption) (*QueuesCmds_Delete_Response, error)
}

type queuesClient struct {
	cc *grpc.ClientConn
}

func NewQueuesClient(cc *grpc.ClientConn) QueuesClient {
	return &queuesClient{cc}
}

func (c *queuesClient) List(ctx context.Context, in *QueuesCmds_List_Request, opts ...grpc.CallOption) (*QueuesCmds_List_Response, error) {
	out := new(QueuesCmds_List_Response)
	err := grpc.Invoke(ctx, "/gork_gateways_grpc.Queues/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) Create(ctx context.Context, in *QueuesCmds_Create_Request, opts ...grpc.CallOption) (*QueuesCmds_Create_Response, error) {
	out := new(QueuesCmds_Create_Response)
	err := grpc.Invoke(ctx, "/gork_gateways_grpc.Queues/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) Read(ctx context.Context, in *QueuesCmds_Read_Request, opts ...grpc.CallOption) (*QueuesCmds_Read_Response, error) {
	out := new(QueuesCmds_Read_Response)
	err := grpc.Invoke(ctx, "/gork_gateways_grpc.Queues/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) Update(ctx context.Context, in *QueuesCmds_Update_Request, opts ...grpc.CallOption) (*QueuesCmds_Update_Response, error) {
	out := new(QueuesCmds_Update_Response)
	err := grpc.Invoke(ctx, "/gork_gateways_grpc.Queues/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queuesClient) Delete(ctx context.Context, in *QueuesCmds_Delete_Request, opts ...grpc.CallOption) (*QueuesCmds_Delete_Response, error) {
	out := new(QueuesCmds_Delete_Response)
	err := grpc.Invoke(ctx, "/gork_gateways_grpc.Queues/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Queues service

type QueuesServer interface {
	List(context.Context, *QueuesCmds_List_Request) (*QueuesCmds_List_Response, error)
	Create(context.Context, *QueuesCmds_Create_Request) (*QueuesCmds_Create_Response, error)
	Read(context.Context, *QueuesCmds_Read_Request) (*QueuesCmds_Read_Response, error)
	Update(context.Context, *QueuesCmds_Update_Request) (*QueuesCmds_Update_Response, error)
	Delete(context.Context, *QueuesCmds_Delete_Request) (*QueuesCmds_Delete_Response, error)
}

func RegisterQueuesServer(s *grpc.Server, srv QueuesServer) {
	s.RegisterService(&_Queues_serviceDesc, srv)
}

func _Queues_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueuesCmds_List_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gork_gateways_grpc.Queues/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).List(ctx, req.(*QueuesCmds_List_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueuesCmds_Create_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gork_gateways_grpc.Queues/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).Create(ctx, req.(*QueuesCmds_Create_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueuesCmds_Read_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gork_gateways_grpc.Queues/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).Read(ctx, req.(*QueuesCmds_Read_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueuesCmds_Update_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gork_gateways_grpc.Queues/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).Update(ctx, req.(*QueuesCmds_Update_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queues_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueuesCmds_Delete_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gork_gateways_grpc.Queues/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesServer).Delete(ctx, req.(*QueuesCmds_Delete_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queues_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gork_gateways_grpc.Queues",
	HandlerType: (*QueuesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Queues_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Queues_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Queues_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Queues_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Queues_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "queries.proto",
}

func init() { proto1.RegisterFile("queries.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xd1, 0x6a, 0x13, 0x41,
	0x14, 0xed, 0x6e, 0xd7, 0x6d, 0x72, 0xdb, 0x8a, 0x0c, 0x52, 0xe2, 0x80, 0x50, 0x22, 0x42, 0xc0,
	0xba, 0x60, 0xfa, 0xe0, 0x53, 0x2d, 0x9a, 0x22, 0x11, 0xfb, 0xa0, 0x23, 0xbe, 0x08, 0x12, 0xc6,
	0xec, 0x4d, 0x18, 0x9a, 0xdd, 0x49, 0x67, 0x66, 0x51, 0x7f, 0x40, 0xf0, 0x0f, 0xfc, 0x01, 0x7d,
	0x10, 0xfc, 0x11, 0x7f, 0xc3, 0x1f, 0x91, 0x9d, 0x99, 0xdd, 0x44, 0x34, 0x6e, 0x4a, 0xf5, 0x6d,
	0x67, 0x38, 0xf7, 0x9e, 0x73, 0xee, 0x3d, 0x93, 0xc0, 0xee, 0x79, 0x81, 0x4a, 0xa0, 0x4e, 0xe6,
	0x4a, 0x1a, 0x49, 0xc8, 0x54, 0xaa, 0xb3, 0xd1, 0x94, 0x1b, 0x7c, 0xcb, 0xdf, 0xeb, 0xd1, 0x54,
	0xcd, 0xc7, 0x74, 0x67, 0x2c, 0xb3, 0x4c, 0xe6, 0x0e, 0xd1, 0xfd, 0x1c, 0xc2, 0x95, 0xe7, 0x05,
	0x16, 0x48, 0xae, 0x42, 0x28, 0xd2, 0x4e, 0xb0, 0x1f, 0xf4, 0xda, 0x2c, 0x14, 0x29, 0x21, 0x10,
	0xe5, 0x3c, 0xc3, 0x4e, 0x68, 0x6f, 0xec, 0x37, 0x79, 0x00, 0x2d, 0x8d, 0xc6, 0x88, 0x7c, 0xaa,
	0x3b, 0x9b, 0xfb, 0x41, 0x6f, 0xbb, 0xdf, 0x4d, 0x7e, 0xa7, 0x48, 0x6c, 0xc3, 0xe4, 0x85, 0x47,
	0xb2, 0xba, 0x86, 0xdc, 0x04, 0x18, 0x2b, 0xe4, 0x06, 0xd3, 0x11, 0x37, 0x9d, 0xc8, 0x76, 0x6e,
	0xfb, 0x9b, 0x87, 0x86, 0x7e, 0x0a, 0xa0, 0x55, 0x55, 0x91, 0xa7, 0x00, 0x8a, 0x1b, 0x1c, 0xcd,
	0x44, 0x26, 0x8c, 0xd5, 0xb5, 0xdd, 0x3f, 0x68, 0x66, 0x4b, 0x18, 0x37, 0x78, 0x5a, 0xd6, 0xb0,
	0xb6, 0xaa, 0x3e, 0xe9, 0x31, 0xb4, 0xeb, 0x7b, 0xb2, 0x07, 0xb1, 0x91, 0x67, 0x98, 0x6b, 0xdb,
	0x35, 0x62, 0xfe, 0x44, 0x28, 0xb4, 0xd2, 0x42, 0x71, 0x23, 0x64, 0x6e, 0x5d, 0xef, 0xb2, 0xfa,
	0xdc, 0xfd, 0xba, 0x05, 0x60, 0x89, 0xf4, 0x20, 0x4b, 0x35, 0xfd, 0x1e, 0x40, 0x74, 0x2a, 0xb4,
	0xa1, 0x43, 0xd8, 0x62, 0x78, 0x5e, 0xa0, 0x36, 0xe4, 0x08, 0xe2, 0x39, 0x57, 0x3c, 0xd3, 0x5e,
	0xec, 0xed, 0x3f, 0x89, 0x1d, 0xc8, 0xd9, 0x0c, 0xc7, 0x65, 0xcb, 0xe4, 0x99, 0x05, 0x33, 0x5f,
	0x44, 0xdf, 0x41, 0x8b, 0xa1, 0x9e, 0xcb, 0x5c, 0x23, 0xb9, 0x0f, 0x91, 0xc8, 0x27, 0xd2, 0x37,
	0xba, 0xd5, 0xd0, 0xe8, 0x49, 0x3e, 0x91, 0xcc, 0x16, 0x90, 0x43, 0xd8, 0x52, 0x38, 0x96, 0x2a,
	0xd5, 0x9d, 0x70, 0x7f, 0xb3, 0xb7, 0xdd, 0xbf, 0xb1, 0x72, 0x62, 0xac, 0x42, 0xd2, 0x2f, 0x01,
	0xc4, 0x03, 0xbb, 0x04, 0xfa, 0x7a, 0x61, 0xa7, 0xda, 0x7f, 0xb0, 0x62, 0xff, 0xe1, 0xc5, 0xf7,
	0x4f, 0x8f, 0x96, 0x3c, 0xde, 0x83, 0xd8, 0x09, 0xf0, 0x2e, 0xff, 0xa2, 0xd4, 0x03, 0xe9, 0x87,
	0x00, 0x22, 0x86, 0x3c, 0xa5, 0xc7, 0x0b, 0x99, 0xd7, 0x16, 0xb1, 0x1d, 0x6e, 0xd8, 0xe0, 0x5e,
	0x5f, 0x0e, 0xee, 0x70, 0xc3, 0x49, 0x7f, 0xb4, 0x03, 0x20, 0x52, 0xcc, 0x8d, 0x98, 0x08, 0x54,
	0x97, 0x15, 0xf2, 0x2d, 0x84, 0xf8, 0xe5, 0x3c, 0x2d, 0x27, 0xf6, 0x23, 0xb8, 0xb0, 0x16, 0xf2,
	0x18, 0xa2, 0x94, 0x1b, 0xee, 0x9f, 0x50, 0x7f, 0x25, 0x9f, 0xcd, 0x5a, 0xe2, 0x88, 0x12, 0x4f,
	0x92, 0x9c, 0x70, 0xc3, 0x99, 0xad, 0xa7, 0xaf, 0x20, 0x2a, 0x4f, 0xff, 0x63, 0x55, 0xff, 0x76,
	0x5e, 0x19, 0xc4, 0x27, 0x38, 0x43, 0x83, 0x97, 0xdf, 0x5c, 0x77, 0x49, 0xc9, 0x5e, 0xa9, 0x44,
	0x17, 0x33, 0xf7, 0xf3, 0xd0, 0x62, 0xfe, 0xd4, 0xff, 0x18, 0x41, 0xec, 0x06, 0x48, 0xb8, 0x7b,
	0xa7, 0xe4, 0x4e, 0xc3, 0x90, 0x4b, 0x50, 0x35, 0x62, 0x7a, 0xb0, 0x1e, 0xd8, 0xab, 0x98, 0x56,
	0xaf, 0x87, 0xdc, 0x6d, 0xa8, 0x73, 0xb0, 0x9a, 0x26, 0x59, 0x17, 0xee, 0x89, 0xb8, 0x4b, 0x7f,
	0xa3, 0x97, 0x12, 0xb4, 0xb6, 0x17, 0x0f, 0x5e, 0x78, 0x71, 0x71, 0x6b, 0xf4, 0xf2, 0x6b, 0x2a,
	0x1b, 0xbd, 0xd4, 0xf0, 0x05, 0x91, 0x4b, 0x44, 0x23, 0x91, 0x83, 0xad, 0x4d, 0x54, 0xc3, 0x1d,
	0xd1, 0x9b, 0xd8, 0xfe, 0xcf, 0x1d, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x81, 0x48, 0x2d, 0x78,
	0x1a, 0x07, 0x00, 0x00,
}
