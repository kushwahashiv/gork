// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common.proto

/*
	Package proto is a generated protocol buffer package.

	It is generated from these files:
		common.proto
		queries.proto

	It has these top-level messages:
		Collection
		Queue
		QueuesCmds
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gogoproto "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// goproto_enum_prefix from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoEnumPrefix = gogoproto.E_GoprotoEnumPrefix

// goproto_enum_stringer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoEnumStringer = gogoproto.E_GoprotoEnumStringer

// enum_stringer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EnumStringer = gogoproto.E_EnumStringer

// enum_customname from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EnumCustomname = gogoproto.E_EnumCustomname

// enumdecl from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Enumdecl = gogoproto.E_Enumdecl

// enumvalue_customname from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EnumvalueCustomname = gogoproto.E_EnumvalueCustomname

// goproto_getters_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoGettersAll = gogoproto.E_GoprotoGettersAll

// goproto_enum_prefix_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoEnumPrefixAll = gogoproto.E_GoprotoEnumPrefixAll

// goproto_stringer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoStringerAll = gogoproto.E_GoprotoStringerAll

// verbose_equal_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_VerboseEqualAll = gogoproto.E_VerboseEqualAll

// face_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_FaceAll = gogoproto.E_FaceAll

// gostring_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GostringAll = gogoproto.E_GostringAll

// populate_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_PopulateAll = gogoproto.E_PopulateAll

// stringer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_StringerAll = gogoproto.E_StringerAll

// onlyone_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_OnlyoneAll = gogoproto.E_OnlyoneAll

// equal_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EqualAll = gogoproto.E_EqualAll

// description_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_DescriptionAll = gogoproto.E_DescriptionAll

// testgen_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_TestgenAll = gogoproto.E_TestgenAll

// benchgen_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_BenchgenAll = gogoproto.E_BenchgenAll

// marshaler_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_MarshalerAll = gogoproto.E_MarshalerAll

// unmarshaler_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_UnmarshalerAll = gogoproto.E_UnmarshalerAll

// stable_marshaler_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_StableMarshalerAll = gogoproto.E_StableMarshalerAll

// sizer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_SizerAll = gogoproto.E_SizerAll

// goproto_enum_stringer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoEnumStringerAll = gogoproto.E_GoprotoEnumStringerAll

// enum_stringer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EnumStringerAll = gogoproto.E_EnumStringerAll

// unsafe_marshaler_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_UnsafeMarshalerAll = gogoproto.E_UnsafeMarshalerAll

// unsafe_unmarshaler_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_UnsafeUnmarshalerAll = gogoproto.E_UnsafeUnmarshalerAll

// goproto_extensions_map_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoExtensionsMapAll = gogoproto.E_GoprotoExtensionsMapAll

// goproto_unrecognized_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoUnrecognizedAll = gogoproto.E_GoprotoUnrecognizedAll

// gogoproto_import from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GogoprotoImport = gogoproto.E_GogoprotoImport

// protosizer_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_ProtosizerAll = gogoproto.E_ProtosizerAll

// compare_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_CompareAll = gogoproto.E_CompareAll

// typedecl_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_TypedeclAll = gogoproto.E_TypedeclAll

// enumdecl_all from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_EnumdeclAll = gogoproto.E_EnumdeclAll

// goproto_registration from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoRegistration = gogoproto.E_GoprotoRegistration

// goproto_getters from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoGetters = gogoproto.E_GoprotoGetters

// goproto_stringer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoStringer = gogoproto.E_GoprotoStringer

// verbose_equal from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_VerboseEqual = gogoproto.E_VerboseEqual

// face from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Face = gogoproto.E_Face

// gostring from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Gostring = gogoproto.E_Gostring

// populate from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Populate = gogoproto.E_Populate

// stringer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Stringer = gogoproto.E_Stringer

// onlyone from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Onlyone = gogoproto.E_Onlyone

// equal from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Equal = gogoproto.E_Equal

// description from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Description = gogoproto.E_Description

// testgen from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Testgen = gogoproto.E_Testgen

// benchgen from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Benchgen = gogoproto.E_Benchgen

// marshaler from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Marshaler = gogoproto.E_Marshaler

// unmarshaler from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Unmarshaler = gogoproto.E_Unmarshaler

// stable_marshaler from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_StableMarshaler = gogoproto.E_StableMarshaler

// sizer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Sizer = gogoproto.E_Sizer

// unsafe_marshaler from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_UnsafeMarshaler = gogoproto.E_UnsafeMarshaler

// unsafe_unmarshaler from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_UnsafeUnmarshaler = gogoproto.E_UnsafeUnmarshaler

// goproto_extensions_map from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoExtensionsMap = gogoproto.E_GoprotoExtensionsMap

// goproto_unrecognized from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_GoprotoUnrecognized = gogoproto.E_GoprotoUnrecognized

// protosizer from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Protosizer = gogoproto.E_Protosizer

// compare from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Compare = gogoproto.E_Compare

// typedecl from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Typedecl = gogoproto.E_Typedecl

// nullable from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Nullable = gogoproto.E_Nullable

// embed from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Embed = gogoproto.E_Embed

// customtype from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Customtype = gogoproto.E_Customtype

// customname from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Customname = gogoproto.E_Customname

// jsontag from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Jsontag = gogoproto.E_Jsontag

// moretags from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Moretags = gogoproto.E_Moretags

// casttype from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Casttype = gogoproto.E_Casttype

// castkey from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Castkey = gogoproto.E_Castkey

// castvalue from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Castvalue = gogoproto.E_Castvalue

// stdtime from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Stdtime = gogoproto.E_Stdtime

// stdduration from public import github.com/gogo/protobuf/gogoproto/gogo.proto
var E_Stdduration = gogoproto.E_Stdduration

// Collection wraps message types that are used in collection-related methods.
type Collection struct {
}

func (m *Collection) Reset()                    { *m = Collection{} }
func (m *Collection) String() string            { return proto1.CompactTextString(m) }
func (*Collection) ProtoMessage()               {}
func (*Collection) Descriptor() ([]byte, []int) { return fileDescriptorCommon, []int{0} }

// Params represents various parameters that can be applied to database methods
// that are working with collections (like pagination).
type Collection_Params struct {
	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  uint8  `protobuf:"varint,2,opt,name=limit,proto3,casttype=uint8" json:"limit,omitempty"`
}

func (m *Collection_Params) Reset()                    { *m = Collection_Params{} }
func (m *Collection_Params) String() string            { return proto1.CompactTextString(m) }
func (*Collection_Params) ProtoMessage()               {}
func (*Collection_Params) Descriptor() ([]byte, []int) { return fileDescriptorCommon, []int{0, 0} }

// Info represents a statistical information returned from database methods
// that are working with collections.
type Collection_Info struct {
	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Total  uint64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (m *Collection_Info) Reset()                    { *m = Collection_Info{} }
func (m *Collection_Info) String() string            { return proto1.CompactTextString(m) }
func (*Collection_Info) ProtoMessage()               {}
func (*Collection_Info) Descriptor() ([]byte, []int) { return fileDescriptorCommon, []int{0, 1} }

func init() {
	proto1.RegisterType((*Collection)(nil), "gork_gateways_grpc.Collection")
	proto1.RegisterType((*Collection_Params)(nil), "gork_gateways_grpc.Collection.Params")
	proto1.RegisterType((*Collection_Info)(nil), "gork_gateways_grpc.Collection.Info")
}
func (m *Collection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Collection) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *Collection_Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Collection_Params) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Cursor) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCommon(dAtA, i, uint64(len(m.Cursor)))
		i += copy(dAtA[i:], m.Cursor)
	}
	if m.Limit != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCommon(dAtA, i, uint64(m.Limit))
	}
	return i, nil
}

func (m *Collection_Info) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Collection_Info) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Cursor) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCommon(dAtA, i, uint64(len(m.Cursor)))
		i += copy(dAtA[i:], m.Cursor)
	}
	if m.Total != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCommon(dAtA, i, uint64(m.Total))
	}
	return i, nil
}

func encodeFixed64Common(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Common(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintCommon(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Collection) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *Collection_Params) Size() (n int) {
	var l int
	_ = l
	l = len(m.Cursor)
	if l > 0 {
		n += 1 + l + sovCommon(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovCommon(uint64(m.Limit))
	}
	return n
}

func (m *Collection_Info) Size() (n int) {
	var l int
	_ = l
	l = len(m.Cursor)
	if l > 0 {
		n += 1 + l + sovCommon(uint64(l))
	}
	if m.Total != 0 {
		n += 1 + sovCommon(uint64(m.Total))
	}
	return n
}

func sovCommon(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozCommon(x uint64) (n int) {
	return sovCommon(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Collection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Collection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Collection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Collection_Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cursor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cursor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (uint8(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Collection_Info) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Info: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Info: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cursor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommon
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cursor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommon(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommon
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCommon(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCommon
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommon
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthCommon
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCommon
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCommon(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCommon = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCommon   = fmt.Errorf("proto: integer overflow")
)

func init() { proto1.RegisterFile("common.proto", fileDescriptorCommon) }

var fileDescriptorCommon = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4a, 0xcf, 0x2f, 0xca, 0x8e, 0x4f,
	0x4f, 0x2c, 0x49, 0x2d, 0x4f, 0xac, 0x2c, 0x8e, 0x4f, 0x2f, 0x2a, 0x48, 0x96, 0xd2, 0x4d, 0xcf,
	0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x2b,
	0x4d, 0x2a, 0x4d, 0x03, 0xf3, 0xc0, 0x1c, 0x30, 0x0b, 0x62, 0x84, 0x52, 0x2b, 0x23, 0x17, 0x97,
	0x73, 0x7e, 0x4e, 0x4e, 0x6a, 0x72, 0x49, 0x66, 0x7e, 0x9e, 0x94, 0x23, 0x17, 0x5b, 0x40, 0x62,
	0x51, 0x62, 0x6e, 0xb1, 0x90, 0x18, 0x17, 0x5b, 0x72, 0x69, 0x51, 0x71, 0x7e, 0x91, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x94, 0x27, 0x24, 0xcf, 0xc5, 0x9a, 0x93, 0x99, 0x9b, 0x59, 0x22,
	0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0xeb, 0xc4, 0xf9, 0xeb, 0x9e, 0x3c, 0x6b, 0x69, 0x66, 0x5e, 0x89,
	0x45, 0x10, 0x44, 0x5c, 0xca, 0x84, 0x8b, 0xc5, 0x33, 0x2f, 0x2d, 0x1f, 0xa7, 0x01, 0x22, 0x5c,
	0xac, 0x25, 0xf9, 0x25, 0x89, 0x39, 0x60, 0x03, 0x58, 0x82, 0x20, 0x1c, 0x27, 0xe5, 0x13, 0x0f,
	0xe5, 0x18, 0x76, 0x3c, 0x92, 0x63, 0x3c, 0xf0, 0x48, 0x8e, 0xf1, 0xc4, 0x23, 0x39, 0xc6, 0x0b,
	0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf1, 0x58, 0x8e, 0x21, 0x8a, 0x15, 0xec, 0xd8,
	0x00, 0x86, 0x24, 0x36, 0x30, 0xc3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x76, 0xbd, 0xe0,
	0x08, 0x01, 0x00, 0x00,
}
